from func9 import *

n=0xFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFF7203DF6B21C6052B53BBF40939D54123
p=0xFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF
G=(0x32c4ae2c1f1981195f9904466a39c9948fe30bbff2660be1715a4589334c74c7,0xbc3736a2f4f6779c59bdcee36b692153d0a9877cc62a474002df32e52139f0a0)
a=0xFFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFC
b=0x28E9FA9E9D9F5E344D5A9E4BCF6509A7F39789F515AB8F92DDBCBD414D940E93
P=(0xB9C9A6E04E9C91F7BA880429273747D7EF5DDEB0BB2FF6317EB00BEF331A8308,0x1A6994B8993F3F5D6EADDDB81872266C87C018FB4162F5AF347B483E24620207)

def sm2_dec(C,d1,d2):
    C1,C2,C3=C
    C1=(int(C1[0],16),int(C1[1],16))
    if C1[0]==0 and C1[0]==0:
        print("出错")
        return
    T1=mul(inverse_mod(d1, n),C1)
    _C1=(C1[0],p-C1[1]) #-C1
    T2=mul(inverse_mod(d2, n),T1)
    (x2,y2)=add(T2,_C1)
    klen=len(C2)*4
    t=KDF(hex(x2)[2:].zfill(64)+hex(y2)[2:].zfill(64),klen)
    M__=int(C2,16)^int(t,16)
    u=H(hex(x2)[2:].zfill(64)+hex(M__)[2:].zfill(klen//4)+hex(y2)[2:].zfill(64))
    if u==C3:
        return bytes.fromhex(hex(M__)[2:].zfill(klen//4))

if __name__ == '__main__':
    M=b"Hello Friend"
    C=sm2_enc(M.hex(), P)
    d1=11284301686100593435272859766142206662001417249657340699489350582178954335384
    d2=45107332754902873454879211549814471033736075779386003923213116589908529276156
    M__=sm2_dec(C,d1,d2)
    print("解得明文M__：{}".format(M__))
